"use strict";(self.webpackChunkcommon_voice_docs=self.webpackChunkcommon_voice_docs||[]).push([[31],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8318:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={},l="Task a New Image to Perform NRC Related Tasks",s={unversionedId:"microservice",id:"microservice",title:"Task a New Image to Perform NRC Related Tasks",description:"Backup",source:"@site/docs/microservice.md",sourceDirName:".",slug:"/microservice",permalink:"/common-voice-docs/docs/microservice",editUrl:"https://github.com/joanise/common-voice-docs/tree/main/docs/microservice.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Languages",permalink:"/common-voice-docs/docs/language"},next:{title:"NextCloud",permalink:"/common-voice-docs/docs/nextcloud"}},p={},u=[{value:"Backup",id:"backup",level:2},{value:"Setting up backup",id:"setting-up-backup",level:3},{value:"<code>crond</code>",id:"crond",level:3}],d={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"task-a-new-image-to-perform-nrc-related-tasks"},"Task a New Image to Perform NRC Related Tasks"),(0,i.kt)("h2",{id:"backup"},"Backup"),(0,i.kt)("p",null,"We've implemented an initial solution using nextcloud.\nFor this purpose, we've added a ",(0,i.kt)("inlineCode",{parentName:"p"},"task")," container to common-voice's current docker stack.\nThis container runs ",(0,i.kt)("inlineCode",{parentName:"p"},"crond"),".\nThe script ",(0,i.kt)("inlineCode",{parentName:"p"},"synchronize2webdav.py")," handle making a copy of the audio file from S3Proxy to nextcloud."),(0,i.kt)("h3",{id:"setting-up-backup"},"Setting up backup"),(0,i.kt)("p",null,"You need to copy and populate ",(0,i.kt)("inlineCode",{parentName:"p"},".env-tasks")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env-tasks.example .env-tasks\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WEBDAV_HOSTNAME")," as the form ",(0,i.kt)("inlineCode",{parentName:"li"},"https://nextcloud.nrc-cnrc.gc.ca/remote.php/dav/files/2c523d8d-449f-4176-bb05-d8bde72ad65f/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WEBDAV_LOGIN")," as the form ",(0,i.kt)("inlineCode",{parentName:"li"},"LLLLLLLL-LLLL-LLLL-LLLL-LLLLLLLLLLLL")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WEBDAV_PASSWORD")," as the form ",(0,i.kt)("inlineCode",{parentName:"li"},"PPPPP-PPPPP-PPPPP-PPPPP-PPPPP"))),(0,i.kt)("h3",{id:"crond"},(0,i.kt)("inlineCode",{parentName:"h3"},"crond")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"crond"),"'s image is quite minimalist.\nIt runs scripts under ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/periodic/*")," using ",(0,i.kt)("inlineCode",{parentName:"p"},"run-parts"),".\nNote that your scipts can't be ",(0,i.kt)("inlineCode",{parentName:"p"},"*.sh")," since ",(0,i.kt)("inlineCode",{parentName:"p"},"run-parts")," is capricious:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"run-parts runs a number of scripts or programs found in a single directory directory.\nFilenames should consist entirely of upper and lower case letters, digits, underscores, and hyphens.\nSubdirectories of directory and files with other names will be silently ignored.\n\nScripts must follow the #!/bin/interpretername convention in order to be executed.\nThey will not automatically be executed by /bin/sh.\n\nThe files found will be run in the lexical sort order of the filenames.\n")))}m.isMDXComponent=!0}}]);