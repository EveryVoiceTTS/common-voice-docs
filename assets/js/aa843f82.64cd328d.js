"use strict";(self.webpackChunkcommon_voice_docs=self.webpackChunkcommon_voice_docs||[]).push([[368],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),d=a,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6482:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return m}});var r=t(7462),a=t(3366),o=(t(7294),t(3905)),i=["components"],c={},l="Aligner",s={unversionedId:"microservices/aligner",id:"microservices/aligner",title:"Aligner",description:"* Montreal Forced Aligner",source:"@site/docs/microservices/aligner.md",sourceDirName:"microservices",slug:"/microservices/aligner",permalink:"/common-voice-docs/docs/microservices/aligner",editUrl:"https://github.com/joanise/common-voice-docs/tree/main/docs/microservices/aligner.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Languages",permalink:"/common-voice-docs/docs/language"},next:{title:"Audio Backup",permalink:"/common-voice-docs/docs/microservices/audio"}},u={},m=[{value:"G2P Model",id:"g2p-model",level:2},{value:"Validate",id:"validate",level:2},{value:"Align",id:"align",level:2}],p={toc:m};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"aligner"},"Aligner"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://montreal-forced-aligner.readthedocs.io/en/latest/first_steps/index.html"},"Montreal Forced Aligner")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/MontrealCorpusTools/Montreal-Forced-Aligner"},"Montreal Forced Aligner - Github")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mfa-models.readthedocs.io/en/latest/acoustic/index.html"},"Acoustic models")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://mfa-models.readthedocs.io/en/latest/dictionary/index.html"},"Pronunciation dictionaries"))),(0,o.kt)("h2",{id:"g2p-model"},"G2P Model"),(0,o.kt)("p",null,"Output information about the G2P model."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mfa \\\n  model \\\n  inspect \\\n  acoustic \\\n  french_qc\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"- Acoustic model: french_qc\n  - Version: 1.0.0\n  - Architecture: gmm-hmm\n  - Phone type: triphone\n  - Features:\n    - Feature type: mfcc\n    - Frame shift: 10\n    - Performs speaker adaptation: False\n    - Performs LDA on features: False\n\n  - Phones: @, E, N, O, R, S, Z, ^,\n            a, b, cinq, d, deux, e, f, g,\n            huit, i, j, k, l, m, n, neuf,\n            o, p, s, t, to, u, un, v,\n            w, y, and z\n  - Configuration options:\n    - Multilingual IPA: False\n")),(0,o.kt)("h2",{id:"validate"},"Validate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mfa \\\n  validate \\\n    ~/mfa_data/my_corpus \\\n    french_ipa \\\n    french_qc \\\n    ~/mfa_data/my_corpus_aligned\n")),(0,o.kt)("h2",{id:"align"},"Align"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mfa \\\n  align \\\n    ~/mfa_data/my_corpus \\\n    french_ipa \\\n    french_qc \\\n    ~/mfa_data/my_corpus_aligned\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker container run --rm -it --volume $PWD/Librispeech:/Librispeech common-voice_mfa mfa validate /Librispeech/19  /Librispeech/librispeech-lexicon.txt french_qc /Librispeech/test\n")))}d.isMDXComponent=!0}}]);