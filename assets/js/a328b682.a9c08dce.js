"use strict";(self.webpackChunkcommon_voice_docs=self.webpackChunkcommon_voice_docs||[]).push([[31],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(f,i(i({ref:n},s),{},{components:t})):r.createElement(f,i({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8318:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={},l="Task a New Image to Perform NRC Related Tasks",p={unversionedId:"microservice",id:"microservice",title:"Task a New Image to Perform NRC Related Tasks",description:"Audio Backup",source:"@site/docs/microservice.md",sourceDirName:".",slug:"/microservice",permalink:"/common-voice-docs/docs/microservice",editUrl:"https://github.com/joanise/common-voice-docs/tree/main/docs/microservice.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Languages",permalink:"/common-voice-docs/docs/language"},next:{title:"NextCloud",permalink:"/common-voice-docs/docs/nextcloud"}},s={},u=[{value:"Audio Backup",id:"audio-backup",level:2},{value:"Setting up Backup",id:"setting-up-backup",level:3},{value:"Database Backup",id:"database-backup",level:2},{value:"<code>crond</code>",id:"crond",level:2},{value:"Help",id:"help",level:3}],d={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"task-a-new-image-to-perform-nrc-related-tasks"},"Task a New Image to Perform NRC Related Tasks"),(0,a.kt)("h2",{id:"audio-backup"},"Audio Backup"),(0,a.kt)("p",null,"We've implemented an initial solution using nextcloud.\nFor this purpose, we've added a ",(0,a.kt)("inlineCode",{parentName:"p"},"task")," container to common-voice's current docker stack.\nThis container runs ",(0,a.kt)("inlineCode",{parentName:"p"},"crond"),".\nThe script ",(0,a.kt)("inlineCode",{parentName:"p"},"synchronize2webdav.py")," handle making a copy of the audio file from S3Proxy to nextcloud."),(0,a.kt)("h3",{id:"setting-up-backup"},"Setting up Backup"),(0,a.kt)("p",null,"You need to copy and populate ",(0,a.kt)("inlineCode",{parentName:"p"},".env-tasks")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cp .env-tasks.example .env-tasks\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WEBDAV_HOSTNAME")," as the form ",(0,a.kt)("inlineCode",{parentName:"li"},"https://nextcloud.nrc-cnrc.gc.ca/remote.php/dav/files/2c523d8d-449f-4176-bb05-d8bde72ad65f/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WEBDAV_LOGIN")," as the form ",(0,a.kt)("inlineCode",{parentName:"li"},"LLLLLLLL-LLLL-LLLL-LLLL-LLLLLLLLLLLL")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"WEBDAV_PASSWORD")," as the form ",(0,a.kt)("inlineCode",{parentName:"li"},"PPPPP-PPPPP-PPPPP-PPPPP-PPPPP"))),(0,a.kt)("h2",{id:"database-backup"},"Database Backup"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/2990732"},"how to mysqldump remote db from local machine"),"\nTest done from ",(0,a.kt)("inlineCode",{parentName:"p"},"db")," microservice."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"mysqldump -P 3306 -h db -u root --password=PASSWORD voiceweb\n")),(0,a.kt)("p",null,"We need to upload the output on the backup server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl -u $WEBDAV_LOGIN:$WEBDAV_PASSWORD -T <local file location> https://nextcloud.nrc-cnrc.gc.ca/remote.php/dav/files/$WEBDAV_LOGIN/\n")),(0,a.kt)("h2",{id:"crond"},(0,a.kt)("inlineCode",{parentName:"h2"},"crond")),(0,a.kt)("p",null,"This mircroservice was inspired by ",(0,a.kt)("a",{parentName:"p",href:"https://devopsheaven.com/cron/docker/alpine/linux/2017/10/30/run-cron-docker-alpine.html"},"Running cron jobs in a Docker Alpine container"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"crond"),"'s image is quite minimalist.\nIt runs scripts under ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/periodic/*")," using ",(0,a.kt)("inlineCode",{parentName:"p"},"run-parts"),".\nNote that your scipts can't be ",(0,a.kt)("inlineCode",{parentName:"p"},"*.sh")," since ",(0,a.kt)("inlineCode",{parentName:"p"},"run-parts")," is capricious:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"run-parts runs a number of scripts or programs found in a single directory directory.\nFilenames should consist entirely of upper and lower case letters, digits, underscores, and hyphens.\nSubdirectories of directory and files with other names will be silently ignored.\n\nScripts must follow the #!/bin/interpretername convention in order to be executed.\nThey will not automatically be executed by /bin/sh.\n\nThe files found will be run in the lexical sort order of the filenames.\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://nixdoc.net/man-pages/Linux/man8/run-parts.8.html"},(0,a.kt)("inlineCode",{parentName:"a"},"run-parts's")," man page")),(0,a.kt)("h3",{id:"help"},"Help"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"crond --help\nBusyBox v1.34.1 (2022-04-04 10:19:27 UTC) multi-call binary.\n\nUsage: crond [-fbS] [-l N] [-d N] [-L LOGFILE] [-c DIR]\n\n        -f      Foreground\n        -b      Background (default)\n        -S      Log to syslog (default)\n        -l N    Set log level. Most verbose 0, default 8\n        -d N    Set log level, log to stderr\n        -L FILE Log to FILE\n        -c DIR  Cron dir. Default:/var/spool/cron/crontabs\n")))}m.isMDXComponent=!0}}]);